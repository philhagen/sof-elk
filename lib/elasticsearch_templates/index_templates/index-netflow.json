{
  "index_patterns": [
    "netflow-*"
  ],
  "composed_of": [
    "settings-common",
    "mappings-corecommon",
    "mappings-string",
    "mappings-ip_address",
    "mappings-geohash",
    "mappings-port",
    "mappings-zeekuid",
    "mappings-final"
  ],
  "template": {
    "mappings": {
      "runtime": {
        "network.bytes": {
          "type": "long",
          "script": {
            "source": "emit(doc['source.bytes'].value + doc['destination.bytes'].value);"
          }
        },
        "network.bytes_vis": {
          "type": "long",
          "script": {
            "source": "emit(doc['source.bytes'].value + doc['destination.bytes'].value);"
          }
        },
        "network.packets": {
          "type": "long",
          "script": {
            "source": "emit(doc['source.packets'].value + doc['destination.packets'].value);"
          }
        },
        "network.packets_vis": {
          "type": "long",
          "script": {
            "source": "emit(doc['source.packets'].value + doc['destination.packets'].value);"
          }
        },
        "network.pcr": {
          "type": "double",
          "script": {
            "source": "if (doc.containsKey('source.bytes') && doc.containsKey('destination.bytes')) { long total_bytes = doc['source.bytes'].value + doc['destination.bytes'].value; if (total_bytes == 0) { emit(0); } else { emit( (float)(doc['source.bytes'].value - doc['destination.bytes'].value) / (float)total_bytes ); } }"
          }
        }
      },
      "properties": {
        "netflow": {
          "properties": {
            "exporter": {
              "properties": {
                "ip": {
                  "type": "ip"
                }
              }
            },
            "flow_duration": {
              "type": "double"
            },
            "flow_encrypted": {
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "_meta": {
    "provider": "SOF-ELK"
  }
}
