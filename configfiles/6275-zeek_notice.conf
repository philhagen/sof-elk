# SOF-ELKÂ® Configuration File
# (C)2023 Lewes Technology Consulting, LLC
#
# This file contains processing steps for Zeek's notice.log

# Reference: https://docs.zeek.org/en/master/scripts/base/frameworks/notice/main.zeek.html#type-Notice::Info

filter {
  if [type] == "zeek_notice" and "zeek_json" in [tags] {
    mutate {
      # unsure how passive differs from data_channel.passive
      rename => {
        "[raw][uid]" => "zeek_uid"
        "[raw][id.orig_h]" => "source_ip"
        "[raw][id.orig_p]" => "source_port"
        "[raw][id.resp_h]" => "destination_ip"
        "[raw][id.resp_p]" => "destination_port"
        "[raw][community_id]" => "community_id"
        "[raw][fuid]" => "fuid"
        "[raw][file_mime_type]" => "mime_type"
        "[raw][file_desc]" => "file_description"
        "[raw][proto]" => "aprotocol"
        "[raw][note]" => "notice_type"
        "[raw][msg]" => "notice_message"
        "[raw][sub]" => "notice_submessage"
        "[raw][peer_name]" => "zeek_peer_name"
        "[raw][peer_desc]" => "zeek_peer_description"
        "[raw][actions]" => "actions"
        "[raw][email_dest]" => "notification_email"
        "[raw][suppress_for]" => "suppress_for"
      }
    }

    # populate the @timestamp field with the ts value
    date {
      match => [ "[raw][ts]", "UNIX" ]
    }

    if [raw][src] and ![source_ip] {
      mutate {
        rename => {
          "[raw][src]" => "source_ip"
        }
      }
    }
    if [raw][dst] and ![destination_ip] {
      mutate {
        rename => {
          "[raw][dst]" => "destination_ip"
        }
      }
    }
    if [raw][p] and ![destination_port] {
      mutate {
        rename => {
          "[raw][p]" => "destination_port"
        }
      }
    } 

    translate {
      dictionary_path => "/usr/local/sof-elk/lib/dictionaries/ip_proto_zeek2int.yaml"
      source => "aprotocol"
      target => "protocol"
    }

    mutate {
      convert => {
        "suppress_for" => "integer"
      }
      remove_field => "raw"
    }
  }
}
