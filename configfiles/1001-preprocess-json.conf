# SOF-ELKÂ® Configuration File
# (C)2023 Lewes Technology Consulting, LLC
#
# This file preprocesses JSON-formatted logs

filter {
  if "json" in [tags] {

    # lowercase and unquote all true/false values so downstream picks them up as booleans
    mutate {
      gsub => [
        "message", '(?i)""true""', 'true',
        "message", '(?i)""false""', 'false',
        "message", '(?i)"true"', 'true',
        "message", '(?i)"false"', 'false'
      ]
    }

    # when the input is an array of json objects on a multiline input, we need to unwrap the array items
    # this is a mess..  super annoying and prone to collateral damage
    # therefore, only apply this to types where the special attention is known to be required
    # maybe this is better suited to a separate pre-pre-processor? ugh...
    if [type] == "gcp" or [type] == "archive-netflow" {
      if [message] =~ "},$" {
        mutate {
            gsub => [ "message", "},\z", "}" ]
        }
        if [message] =~ "^$" {
            drop { }
        }
      }
    }

    # this will take the entire json object and place it under a "raw" field.
    # then the processors can pick and pull from raw.* to keep fields, then drop "raw" when done.
    json {
      source => "message"
      target => "raw"
      remove_tag => [ "json" ]
      remove_field => [ "message" ]
    }

    # conditionally tag on successful json parsing
    if "zeek" in [tags] and [raw] {
      mutate {
        add_tag => [ "zeek_json" ]
      }
    }
  }
}
