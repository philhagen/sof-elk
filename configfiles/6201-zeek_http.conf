# SOF-ELKÂ® Configuration File
# (C)2024 Lewes Technology Consulting, LLC
#
# This file contains processing steps for Zeek's HTTP logs, normalizing them to existing mappings for other HTTP records
# Some portions orginally contributed by Justin Henderson

# Reference: https://docs.zeek.org/en/master/scripts/base/protocols/http/main.zeek.html#type-HTTP::Info

filter {
  if [labels][type] == "zeek_http" and "zeek_json" in [tags] {
    mutate {
      rename => {
        "[raw][id.orig_h]" => "[source][ip]"
        "[raw][id.orig_p]" => "[source][port]"
        "[raw][id.resp_h]" => "[destination][ip]"
        "[raw][id.resp_p]" => "[destination][port]"
        "[raw][info_code]" => "[http][response][info_code]"
        "[raw][info_msg]" => "[zeek][http][info_msg]"
        "[raw][method]" => "[http][request][method]"
        "[raw][orig_filenames]" => "[zeek][http][orig_filenames]"
        "[raw][orig_fuids]" => "[zeek][http][orig_fuids]"
        "[raw][orig_mime_types]" => "[zeek][http][orig_mime_types]"
        "[raw][password]" => "[url][password]"
        "[raw][proxied]" => "[zeek][proxy_headers]"
        "[raw][referrer]" => "[http][request][referrer]"
        "[raw][request_body_len]" => "[source][bytes]"
        "[raw][resp_filenames]" => "[zeek][http][resp_filenames]"
        "[raw][resp_fuids]" => "[zeek][http][resp_fuids]"
        "[raw][resp_mime_types]" => "[zeek][http][resp_mime_types]"
        "[raw][response_body_len]" => "[destination][bytes]"
        "[raw][status_code]" => "[http][response][status_code]"
        "[raw][status_msg]" => "[zeek][http][status_msg]"
        "[raw][uid]" => "[zeek][session_id]"
        "[raw][uri]" => "[url][path]"
        "[raw][user_agent]" => "[user_agent][original]"
        "[raw][username]" => "[server][user][name]"
        "[raw][version]" => "[http][version]"
      }
    }

    # these are defined by zeek but not handled at this time
    #"trans_depth", "origin", "tags", "capture_password", "range_request"
    #"orig_mime_depth", "resp_mime_depth", "current_entity"

    # populate the @timestamp field with the ts value
    date {
      match => [ "[raw][ts]", "UNIX" ]
    }

    # [raw][host] might contain a hostname/IP and a port in IP:port form.  if
    #   so, split into [url][domain] and [destination][port]
    #   [destination][port] should already be present from Zeek's own field,
    #   but it'll be de-duplicated downstream so this is a "safety net"
    if [raw][host] {
      grok {
        match =>  { "[raw][host]" => [ "(?:%{IPORHOST:[url][domain]}(?::%{POSINT:[destination][port]})?)" ] }
        tag_on_failure => [ "_grokparsefail_6201-01"]
      }
    }

    mutate {
      remove_field => "raw"
    }
  }
}
