# SOF-ELKÂ® Configuration File
# (C)2025 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for records created by Yamato Security's Hayabusa tool
# It builds upon content initially created by @bedangSen

filter {
  if [labels][type] == "hayabusa" {
    mutate {
      rename => {
        "[raw][Channel]" => "[winlog][channel]"
        "[raw][Computer]" => "[winlog][computer_name]"
        "[raw][Details][Cmdline]" => "[process][command_line]"
        "[raw][Details][Company]" => "[winlog][event_data][Company]"
        "[raw][Details][Description]" => "[winlog][event_data][Description]"
        "[raw][Details][LGUID]" => "[winlog][event_data][LogonGuid]"
        "[raw][Details][LID]" => "[winlog][event_data][LogonId]"
        "[raw][Details][PGUID]" => "[process][entity_id]"
        "[raw][Details][PID]" => "[process][pid]"
        "[raw][Details][ParentCmdline]" => "[process][parent][command_line]"
        "[raw][Details][ParentPGUID]" => "[process][parent][entity_id]"
        "[raw][Details][ParentPID]" => "[process][parent][pid]"
        "[raw][Details][Proc]" => "[process][executable]"
        "[raw][Details][Product]" => "[winlog][event_data][Product]"
        "[raw][Details][User]" => "[@metadata][User]"
        "[raw][EventID]" => "[winlog][event_id]"
        "[raw][ExtraFieldInfo][CurrentDirectory]" => "[process][working_directory]"
        "[raw][ExtraFieldInfo][IntegrityLevel]" => "[winlog][event_data][IntegrityLevel]"
        "[raw][ExtraFieldInfo][ParentImage]" => "[process][parent][executable]"
        "[raw][ExtraFieldInfo][TerminalSessionId]" => "[winlog][event_data][TerminalSessionId]"
        "[raw][ExtraFieldInfo][UtcTime]" => "[@metadata][UtcTime]"
#        "[raw][Level]" ????
        "[raw][RecordID]" => "[winlog][record_id]"
        "[raw][RuleID]" => "[rule][id]"
        "[raw][RuleTitle]" => "[rule][name]"
      }
      copy => {
        "[winlog][computer_name]" => "[host][hostname]"
        "[winlog][event_data][Description]" => "[process][pe][description]"
        "[process][pid]" => "[winlog][process][pid]"
        "[winlog][event_data][Product]" => "[process][pe][product]"
#TODO NEED A LOT MORE COPY ACTIONS HERE
        # "[winlog][provider_name]" => "[event][provider]"
        # "[event][task]" => "[event][action]"
        # "[winlog][event_data][Company]" => "[process][pe][company]"
        # "[winlog][user][identifer]" => "[user][id]"
        # "[winlog][user][domain]" => "[user][domain]"
      }  
    }

    # Split these into their individual hash type fields
    if [raw][Details][Hashes] {
      kv {
        source => "[raw][Details][Hashes]"
        target => "[@metadata][kvhashes]"
        field_split => ","
      }
      if [@metadata][kvhashes] {
        mutate {
          rename => {
            "[@metadata][kvhashes][MD5]" => "[process][hash][md5]"
            "[@metadata][kvhashes][SHA256]" => "[process][hash][sha256]"
            "[@metadata][kvhashes][IMPHASH]" => "[process][pe][imphash]"
          }
        }

        if [process][hash][md5] { mutate { merge => { "[related][hash]" => "[process][hash][md5]" } } }
        if [process][hash][sha256] { mutate { merge => { "[related][hash]" => "[process][hash][sha256]" } } }
        if [process][pe][imphash] { mutate { merge => { "[related][hash]" => "[process][pe][imphash]" } } }
      }
    }

    if [@metadata][User] {
      mutate { add_tag => [ "entry" ] }
      grok {
        patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
        match => { "[@metadata][User]" => [
          "%{WINDOMAIN:[winlog][user][domain]}/%{WINUSER:[winlog][user][name]}"
          ]
        }
      }
      mutate { merge => { "[related][user]" => "[winlog][user][name]" } }
    }
  
    if [@metadata][UtcTime] {
      date {
        match => [ "[@metadata][UtcTime]", "ISO8601" ]
        target => "[winlog][event_data][CreationUtcTime]"
      }
    }

    mutate {
      convert => {
        "[winlog][event_id]" => "integer"
        "[winlog][record_id]" => "integer"
        "[winlog][event_data][IntegrityLevel]" => "integer"
      }
      remove_field => [ "raw" ]
    }
  }
}
