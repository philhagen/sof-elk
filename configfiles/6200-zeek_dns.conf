# SOF-ELKÂ® Configuration File
# (C)2024 Lewes Technology Consulting, LLC
#
# This file contains processing steps for Zeek's DNS logs, normalizing them to existing mapppings for other DNS records
# Some portions orginally contributed by Justin Henderson

# Reference: https://docs.zeek.org/en/master/scripts/base/protocols/dns/main.zeek.html#type-DNS::Info

filter {
  if [labels][type] == "zeek_dns" and "zeek_json" in [tags] {
    mutate {
      rename => {
        "[raw][uid]" => "[zeek][session_id]"
        "[raw][id.orig_h]" => "[source][ip]"
        "[raw][id.orig_p]" => "[source][port]"
        "[raw][id.resp_h]" => "[destination][ip]"
        "[raw][id.resp_p]" => "[destination][port]"
        "[raw][proto]" => "[network][transport]"
        "[raw][query]" => "[dns][question][name]"
        "[raw][qtype_name]" => "[dns][question][type]"
        "[raw][answers]" => "[dns][answers][data]"
        "[raw][TTLs]" => "[dns][answers][ttl]"
        "[raw][rcode_name]" => "[dns][response][code]"
        "[raw][trans_id]" => "[dns][id]"
        "[raw][rtt]" => "[dns][rtt]"
        "[raw][Z]" => "[dns][dnssec_z]"
        "[raw][rejected]" => "[dns][rejected]"
      }
      add_tag => [ "dns_record" ]
    }

    if [raw][qclass_name] {
      translate {
        dictionary_path => "/usr/local/sof-elk/lib/dictionaries/zeek_dns_class2classabbrev.yaml"
        source => "[raw][qclass_name]"
        target => "[dns][question][class]"
      }
    }

    # populate the @timestamp field with the ts value
    date {
      match => [ "[raw][ts]", "UNIX" ]
    }
    translate {
      dictionary_path => "/usr/local/sof-elk/lib/dictionaries/ip_proto_name2int.yaml"
      source => "[network][transport]"
      target => "[network][iana_number]"
    }

    if [dns][answers][data] and [dns][question][type] != "CNAME" {
      grok {
        match => [ "[dns][answers][data]", "^%{IP:[dns][answers][ip]}$" ]
        tag_on_failure => [ "_grokparsefail_6200-01"]
      }
    }
    if ![dns][question][type] {
      mutate {
        add_field => { "[dns][question][type]" => "unktype" }
      }
    }

    if [raw][AA] { mutate { add_field => { "[dns][header_flags]" => "AA" } } }
    if [raw][TC] { mutate { add_field => { "[dns][header_flags]" => "TC" } } }
    if [raw][RD] { mutate { add_field => { "[dns][header_flags]" => "RD" } } }
    if [raw][RA] { mutate { add_field => { "[dns][header_flags]" => "RA" } } }
    if [raw][AD] { mutate { add_field => { "[dns][header_flags]" => "AD" } } }
    if [raw][CD] { mutate { add_field => { "[dns][header_flags]" => "CD" } } }
    if [raw][DO] { mutate { add_field => { "[dns][header_flags]" => "DO" } } }

    mutate {
      convert => {
        "[network][iana_number]" => "integer"
      }
      remove_field => "raw"
    }
  }
}
